name: CI

on:
  push:
    branches: [ plaidml-v1 ]
  pull_request:
    branches: [ plaidml-v1 ]
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        include:
          - build_type: Debug
            check: core
          - build_type: Release
            check: smoke

    env:
      build_type: ${{ matrix.build_type }}
      build_root: build-x86_64
      check: ${{ matrix.check }}
      system: Linux
      version: "1.0.0"

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ${{ github.workspace }}/.cenv/
          channels: conda-forge,defaults
          environment-file: environment.yml
          mamba-version: "*"
          miniconda-version: "latest"

      - run: |
          conda info
          conda list

      - name: Build & test
        run: |
          mkdir -p logs
          echo "::group::configure"
          python configure --ci --temp=/tmp/${build_root}/${build_type} --type=${build_type} &> logs/configure.log
          echo "::endgroup::"
          echo "::group::ninja check-${check}"
          ninja -C ${build_root}/${build_type} check-${check} &> logs/check-${check}.log
          echo "::endgroup::"
          echo "::group::ninja package"
          ninja -C ${build_root}/${build_type} package
          echo "::endgroup::"
          echo "::group::Test devkit"
          cd {build_root}/${build_type}/_CPack_Packages/${system}/TGZ/PlaidML-${version}-${system}/devkit
          cmake -S . -B build -G Ninja
          ninja -C build
          build/edsl_test
          echo "::endgroup::"

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{ env.build_root }}/${{ env.build_type }}
          path: |
            logs/*.log
            "${{ env.build_root }}/${{ env.build_type }}/*.whl"
            "${{ env.build_root }}/${{ env.build_type }}/*.tar.gz"
