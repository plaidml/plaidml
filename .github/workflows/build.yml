name: Build

on:
  workflow_call:
    inputs:
      build_type:
        required: true
        type: string
      check:
        required: true
        type: string

defaults:
  run:
    shell: bash -l {0}

env:
  build_root: build-x86_64
  build_type: ${{inputs.build_type}}
  check: ${{inputs.check}}
  system: Linux
  version: "1.0.0"
  python_arch: manylinux1_x86_64

jobs:
  build:
    runs-on: [self-hosted, build=linux_x86_64]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ${{ github.workspace }}/.cenv/
          channels: conda-forge,defaults
          environment-file: environment.yml
          mamba-version: "*"
          miniconda-version: "latest"

      - name: Configure
        run: |
          mkdir -p logs
          python configure --ci --temp=/tmp/${build_root}/${build_type} --type=${build_type} &> logs/configure.log

      - name: ninja check-${{inputs.check}}
        run: export KMP_AFFINITY=verbose && export OMP_NUM_THREADS=4 && ninja -C ${build_root}/${build_type} check-${check} &> logs/check-${check}.log

      - name: ninja package
        run: ninja -C ${build_root}/${build_type} package

      - name: Test devkit
        run: |
          cd ${build_root}/${build_type}/_CPack_Packages/${system}/TGZ/PlaidML-${version}-${system}/devkit
          cmake -S . -B build -G Ninja
          ninja -C build
          build/edsl_test

      - name: Report failures
        if: failure()
        run: |
          echo "::group::configure"
          tail -n 1000 logs/configure.log
          echo "::endgroup::"
          echo "::group::ninja check-${check}"
          tail -n 1000 logs/check-${check}.log
          echo "::endgroup::"

      - name: Upload logs
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: ${{env.build_root}},${{inputs.build_type}},logs,${{github.run_id}}
          path: logs/*.log

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        if: inputs.build_type == 'Release'
        with:
          name: ${{env.build_root}},${{inputs.build_type}},wheels
          path: ${{env.build_root}}/${{inputs.build_type}}/*.whl

      - name: Upload kits
        uses: actions/upload-artifact@v2
        if: inputs.build_type == 'Release'
        with:
          name: ${{env.build_root}},${{inputs.build_type}},kits
          path: ${{env.build_root}}/${{inputs.build_type}}/*.tar.gz
