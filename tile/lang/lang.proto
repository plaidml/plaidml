syntax = "proto3";

package vertexai.tile.lang.proto;

option java_package = "ai.vertex.tile.lang";
option java_outer_classname = "LangProtos";

message Attribute {
  string name = 1;
  repeated string params = 2;
}

message PerfStats {
  uint64 true_ops = 1;       // How many useful ops for everything
  uint64 work_groups = 2;    // How many work groups
  uint64 inner_loops = 3;    // How many read/compute loops per WG
  uint64 shared_mem = 4;     // How much shared memory per WG
  uint64 out_regs = 5;       // How much register usage for outputs (in bytes)
  uint64 mem_read = 6;       // How much memory does each WG read
  uint64 mem_write = 7;      // How much memory does each WG write
  uint64 operations = 8;     // How many primary operations per WG
  uint64 rollups = 9;        // How many rollups per WG
  uint64 threads_used = 10;  // How many useful threads we're using per WG
}

message KernelInfo {
  oneof kernel_type {
    ContractionInfo element = 1;
    ContractionInfo contraction = 2;
    ZeroInfo zero = 3;
    SpecialInfo special = 4;
  }
  string name = 5;
  PerfStats perf_stats = 6;

  int64 flops = 101;
  int64 bytes = 102;
}

message ContractionInfo {
  message Access {
    string name = 1;
    int64 range = 2;
    repeated uint64 strides = 3;
  }

  message Constraint {
    repeated int64 lhs = 1;
    int64 rhs = 2;
  }

  repeated string ops = 1;
  repeated Access accesses = 2;
  repeated int64 off = 3;
  repeated int64 vec = 4;
  repeated Constraint constraints = 5;
  repeated Attribute attributes = 6;
}

message ZeroInfo {
  bool copy = 1;
}

message SpecialInfo {
  string fn = 1;
}
